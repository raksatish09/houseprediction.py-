# Step 1: Import Libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error

# Step 2: Upload Dataset Manually in Google Colab
from google.colab import files
print("üìÇ Upload 'train.csv' from Kaggle")
uploaded = files.upload()  # Manually select 'train.csv' file

# Step 3: Load Dataset
df = pd.read_csv("train.csv")  # Reads the uploaded dataset

# Step 4: Display First 5 Rows
print("Dataset Preview:")
print(df.head())

# Step 5: Check for Missing Values
print("\nMissing Values:")
print(df.isnull().sum())

# Step 6: Select Features (X) and Target (y)
# Using 'GrLivArea' (Living Area in sq ft) and 'BedroomAbvGr' (No. of Bedrooms) as predictors
X = df[['GrLivArea', 'BedroomAbvGr']]
y = df['SalePrice']

# Step 7: Split Data (80% Train, 20% Test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 8: Train Linear Regression Model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 9: Make Predictions
y_pred = model.predict(X_test)

# Step 10: Evaluate Model Performance
mae = mean_absolute_error(y_test, y_pred)
rmse = mean_squared_error(y_test, y_pred) ** 0.5

print(f"\nüìä Model Performance:")
print(f"Mean Absolute Error (MAE): {mae:.2f}")
print(f"Root Mean Squared Error (RMSE): {rmse:.2f}")

# Step 11: Visualize Actual vs Predicted Prices
plt.figure(figsize=(8,6))
sns.scatterplot(x=y_test, y=y_pred)
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual vs Predicted House Prices")
plt.show()

# Step 12: Predict for New House Data
new_house = np.array([[2500, 3]])  # Example: 2500 sq ft, 3 bedrooms
predicted_price = model.predict(new_house)
print(f"\nüè° Predicted Price for a 2500 sq ft house with 3 bedrooms: ${predicted_price[0]:,.2f}")
